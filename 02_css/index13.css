.container {
    width: 300px;
    height: 400px;
    background-color: #333;
    margin: 0 auto; /* 좌우방향에 대해 가운데 배치 */

    display: flex;

    /* 
    flex 기본 용어
    - 주축(main axis) : 아이템 배치 방향의 축
    - 교차축(cross axis) : 주축의 수직 축
    flex-direction: row, row-reverse; => 주축 - 가로방향
    flex-direction: column, column-reverse; => 주축 - 세로방향
    */
    /* flex-direction: row; */
    /* flex-direction: row-reverse; */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* justify-content 속성: 주축에 대하여 아이템을 어떻게 배치할 것인가 */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-between; */ /* 처음, 끝 요소는 부모 끝에 붙이고, 나머지 요소 간격 동일하게 */
    /* justify-content: space-around; */ /* 여백의 비율이 ex.1:2:2:2:1 양쪽 끝 간격이 얇음 */
    /* justify-content: space-evenly; */ /* 여백의 비율이 ex.1:1:1:1:1 여백 간격 모두 동일 */

    /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인가 
      - flex-direction이 수평(row, row-reverse): 교차축 = 수직(세로)
      - flex-direction이 수직(column, column-reverse): 교차축 = 수평(가로)
    */
    /* align-items: stretch; */ /* 교차축에 대해 부모에 맞게 늘어남 */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */
    /* align-items: baseline; */ /* 텍스트라인 기준 */


    /* flex-wrap:줄바꿈 처리 
      ->컨테이너(부모)가 한줄에 아이템을 다 수용하지 못할 때, 줄바꿈 관련 설정
    */
    /* flex-wrap: nowrap; */
    /* flex-wrap: wrap; */
    /* flex-wrap: wrap-reverse; */

    /* align-content: 여러행에 대한 정렬 
      (조건) flex-wrap:wrap/wrap-reverse 상태에서 아이템이 두줄 이상일 때 수직축 방향 설정
    */
    /* align-content: stretch; */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: center; */
}

.items {
    width: 100px;
    height: 100px;
    font-size: 30px;
    font-weight: bold;
    text-align: center;
    line-height: 100px;
}

.item1 {
    background-color: red;
    font-size: 12px;
  }
  
  .item2 {
    background-color: orange;
    font-size: 15px;
  }
  
  .item3 {
    background-color: yellow;
    font-size: 18px;
  }
  
  .item4 {
    background-color: green;
    font-size: 21px;
  }
  
  .item5 {
    background-color: blue;
    font-size: 24px;
  }


  /* 요소 안에 요소를 정가운데 배치하는 방법 */
  .outer {
    width: 300px;
    height: 300px;
    background-color: aquamarine;
  }

  .inner {
    width: 100px;
    height: 100px;
    background-color: pink;
  }

  /* case 1. position, transform */
  .outer1 {
    position: relative;
  }

  .inner1 {
    position: absolute;
    left: 50%;
    top: 50%;
    /* 자기사이즈의 절반씩을 움직이는 속성: transform. 반대로 움직여야할땐 -붙여줌 */
    transform: translate(-50%, -50%);
  }

  /* case2. flex => 좀 더 간결해질 때가 많음. 상황에 따라 case별로 사용하면 된다. */
  .outer2 {
    display: flex;
    justify-content: center;
    align-items: center;
  }